workspace(name = "ziher")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "bazel_skylib",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.0.2/bazel-skylib-1.0.2.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.0.2/bazel-skylib-1.0.2.tar.gz",
    ],
    sha256 = "97e70364e9249702246c0e9444bccdc4b847bed1eb03c5a3ece4f83dfe6abc44",
)
#load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

http_archive(
    name = "rules_m4",
    urls = ["https://github.com/jmillikin/rules_m4/releases/download/v0.2/rules_m4-v0.2.tar.xz"],
    sha256 = "c67fa9891bb19e9e6c1050003ba648d35383b8cb3c9572f397ad24040fb7f0eb",
)
load("@rules_m4//m4:m4.bzl", "m4_register_toolchains")
m4_register_toolchains()

#http_archive(
#    name = "rules_bison",
#    urls = ["https://github.com/jmillikin/rules_bison/releases/download/v0.2/rules_bison-v0.2.tar.xz"],
#    sha256 = "6ee9b396f450ca9753c3283944f9a6015b61227f8386893fb59d593455141481",
#)

#local_repository(
#    name = "rules_bison",
#    path = "c:/users/hernad/rules_bison",
#)

#load("@rules_bison//bison:bison.bzl", "bison_register_toolchains")
#bison_register_toolchains()


# Group the sources of the library so that CMake rule have access to it
#all_content = """filegroup(name = "all", srcs = glob(["**"]), visibility = ["//visibility:public"])"""

#http_archive(
#   name = "rules_foreign_cc",
#   strip_prefix = "rules_foreign_cc-master",
#   url = "https://github.com/bazelbuild/rules_foreign_cc/archive/master.zip",
#)

#load("@rules_foreign_cc//:workspace_definitions.bzl", "rules_foreign_cc_dependencies")

#http_archive(
#    name = "openssl",
#    build_file_content = all_content,
#    strip_prefix = "openssl-OpenSSL_1_1_1d",
#    urls = ["https://github.com/openssl/openssl/archive/OpenSSL_1_1_1d.tar.gz"]
#)


new_local_repository(
    name = "postgresql_windows",
    #path = "c:/dev/F18_mono/F18_v3/conan/deploy/x86_64/libpq/include",
    path = "c:/PostgreSQL/13/include",
    build_file = "postgresql_windows.BUILD"
)

new_local_repository(
    name = "postgresql_windows_lib",
    #path = "c:/dev/F18_mono/F18_v3/conan/deploy/x86_64/libpq/lib",
    path = "c:/PostgreSQL/13/lib",
    build_file="postgresql_windows_lib.BUILD"
    
)

new_local_repository(
    name = "postgresql_x86_windows",
    path = "c:/PostgreSQL-x86/10/include",
    build_file="postgresql_windows.BUILD"
)

new_local_repository(
    name = "postgresql_x86_windows_lib",
    path = "c:/PostgreSQL-x86/10/lib",
    build_file = "postgresql_windows_lib.BUILD"
)


new_local_repository(
    name = "postgresql_linux",
    path = "/usr/include",
    build_file  = "postgresql_linux.BUILD"
)

new_local_repository(
    name = "postgresql_linux_lib",
    path = "/usr/lib64",
    build_file = "postgresql_linux_lib.BUILD"
)
